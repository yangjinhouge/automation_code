{"name": "test_add_lesson[{\"name\":\"大学英语\",\"desc\":\"大学英语课程\", \"display_idx\":\"4\"\"}-{\"retcode\": 0, \"id\": 1286}]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testCaseTeach.testLesson.TestLesson object at 0x03D34270>\ninData = '{\"name\":\"大学英语\",\"desc\":\"大学英语课程\", \"display_idx\":\"4\"\"}'\nrepsData = '{\"retcode\": 0, \"id\": 1286}'\n\n    @pytest.mark.lesson_add#标签\n    @pytest.mark.parametrize(\"inData,repsData\",get_excelData(\"2-课程模块\",2,26,6,8))\n    def test_add_lesson(self,inData,repsData):\n    \n        # print(\"------------执行课程模块的用例--------开始-------\")\n        res=LessonClass().add_lesson(self.session,inData)\n    \n>       assert json.loads(res)[\"retcode\"]==json.loads(repsData)[\"retcode\"]\n\ntestLesson.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x02D5C290>\ns = '<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\\n  <...      display a standard page generated by the handler for this status code.\\n    </p>\\n  </div>\\n\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\lib\\json\\decoder.py:357: JSONDecodeError"}, "parameters": [{"name": "inData", "value": "'{\"name\":\"大学英语\",\"desc\":\"大学英语课程\", \"display_idx\":\"4\"\"}'"}, {"name": "repsData", "value": "'{\"retcode\": 0, \"id\": 1286}'"}], "start": 1601197777211, "stop": 1601197777317, "uuid": "90d8131a-f8b3-4da8-acbf-e461e7db30d6", "historyId": "e12aa14f06b8132a5d0b8f735e438277", "testCaseId": "7edce699246776d87342c90192005101", "fullName": "testLesson.TestLesson#test_add_lesson", "labels": [{"name": "tag", "value": "lesson_add"}, {"name": "suite", "value": "testLesson"}, {"name": "subSuite", "value": "TestLesson"}, {"name": "host", "value": "SKY-20090101YHI"}, {"name": "thread", "value": "8252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testLesson"}]}